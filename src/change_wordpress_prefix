#!/bin/bash

# If something goes wrong or not expected, halts the script execution
set -e

# Set here the required scripts variables
user=DATABASE_USER
password=DATABASE_PASSWORD
database=DATABASE_NAME
new_prefix=NEW_PREFIX
old_prefix=OLD_PREFIX

# Loop through all the database tables and change the prefix
for i in $(mysql -u$user -p$password $database -e "SHOW TABLES" | grep -iE "^$old_prefix"); do
    new_name=$(echo $i | sed 's/'$old_prefix'/'$new_prefix'/g')
    mysql -u$user -p$password $database -e "RENAME TABLE $i TO $new_name"
    echo Renamed from $i to $new_name
done

# Replaces the key names based on prefix in the options table
mysql -u$user -p$password $database -e "UPDATE "$new_prefix"options SET option_name = REPLACE(option_name, '"$old_prefix"', '"$new_prefix"') WHERE option_name LIKE '"$old_prefix"%'"
#echo "UPDATE "$new_prefix"options SET option_name = REPLACE(option_name, '"$old_prefix"', '"$new_prefix"') WHERE option_name LIKE '"$old_prefix"%'"

# Replaces the parameters from usermeta based on prefix
mysql -u$user -p$password $database -e "UPDATE "$new_prefix"usermeta SET meta_key = REPLACE(meta_key, '"$old_prefix"', '"$new_prefix"') WHERE meta_key LIKE '"$old_prefix"%'"
#echo "UPDATE "$new_prefix"usermeta SET meta_key = REPLACE(meta_key, '"$old_prefix"', '"$new_prefix"') WHERE meta_key LIKE '"$old_prefix"%'"
